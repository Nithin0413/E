// Load the timer interrpt routine
loadi(4,17);
loadi(5,18);

// Load library code
loadi(63,13);
loadi(64,14);


// Load INT10 module
loadi(22,35);
loadi(23,36);

// Load the exception handler routine
loadi(2, 15);
loadi(3, 16);

// Load INT7 code
loadi(16,29);
loadi(17,30);

// Load init program
loadi(65,7);
loadi(66,8);

// Load even program
loadi(84,69);

// Load prime program
loadi(90,70);

// Load module 5
loadi(50,63);
loadi(51,64);


// INIT PROGRAM - ODD PROGRAM

PTBR = PAGE_TABLE_BASE +20;
PTLR = 10;

// Page Table entry for init Program

// Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

// Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

// Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";


// Process Table Entry for init Program - odd Program
[PROCESS_TABLE +17] = 1; //PID
[PROCESS_TABLE +20] = CREATED;
[PROCESS_TABLE + 26] = 80; // User Area Page Number
[PROCESS_TABLE + 29] = 8*512;
[PROCESS_TABLE + 28] = 0;
[PROCESS_TABLE + 30] = PTBR;
[PROCESS_TABLE + 31] = PTLR;

//  Entry point IP value for INIT program stored to top of the stack
[76*512] = [65*512 + 1];


// EVEN PROGRAM

PTBR = PAGE_TABLE_BASE +40;
PTLR = 10;

// Page Table entry for Even program

// Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

// Heap
[PTBR+4] = 85;
[PTBR+5] = "0110";
[PTBR+6] = 86;
[PTBR+7] = "0110";

// Code
[PTBR+8] = 84;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 87;
[PTBR+17] = "0110";
[PTBR+18] = 88;
[PTBR+19] = "0110";


// Process Table Entry for Even Program
alias ProcessTableEntry R0;
ProcessTableEntry = PROCESS_TABLE + 32;

//Adding data to process table
[ProcessTableEntry + 11] = 89; // User Area Page
[ProcessTableEntry + 1] = 2; // PID to 2
[ProcessTableEntry + 4] = CREATED;
[ProcessTableEntry + 13] = 8*512;
[ProcessTableEntry + 12] = 0;
[ProcessTableEntry + 14] = PTBR;
[ProcessTableEntry + 15] = PTLR;

//  Entry point IP value for INIT program stored to top of the stack
[87*512] = [84*512 + 1];


// PRIME PROGRAM

PTBR = PAGE_TABLE_BASE +60;
PTLR = 10;

// Page Table entry for Prime Program

// Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

// Heap
[PTBR+4] = 91;
[PTBR+5] = "0110";
[PTBR+6] = 92;
[PTBR+7] = "0110";

// Code
[PTBR+8] = 90;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 93;
[PTBR+17] = "0110";
[PTBR+18] = 94;
[PTBR+19] = "0110";


// Process Table Entry for Even Program
ProcessTableEntry = PROCESS_TABLE + 48;

//Adding data to process table
[ProcessTableEntry + 11] = 95; // User Area Page
[ProcessTableEntry + 1] = 3; // PID
[ProcessTableEntry + 4] = CREATED;
[ProcessTableEntry + 13] = 8*512;
[ProcessTableEntry + 12] = 0;
[ProcessTableEntry + 14] = PTBR;
[ProcessTableEntry + 15] = PTLR;

//  Entry point IP value for INIT program stored to top of the stack
[93*512] = [90*512 + 1];

// Setting all other process to terminated
[PROCESS_TABLE + 68] = TERMINATED;
[PROCESS_TABLE + 84] = TERMINATED;
[PROCESS_TABLE + 100] = TERMINATED;
[PROCESS_TABLE + 116] = TERMINATED;
[PROCESS_TABLE + 132] = TERMINATED;
[PROCESS_TABLE + 148] = TERMINATED;
[PROCESS_TABLE + 164] = TERMINATED;
[PROCESS_TABLE + 180] = TERMINATED;
[PROCESS_TABLE + 196] = TERMINATED;
[PROCESS_TABLE + 212] = TERMINATED;
[PROCESS_TABLE + 228] = TERMINATED;
[PROCESS_TABLE + 244] = TERMINATED;

return;